name: CI
on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]
  workflow_dispatch:
    inputs:
      build_docker:
        description: 'Force Docker build'
        required: false
        default: 'false'
        type: boolean

env:
  ZEPHYR_IMG: ghcr.io/reggiemarr/fprime-zephyr-reference

jobs:
  check-docker-changes:
    runs-on: ubuntu-latest
    outputs:
      docker_changed: ${{ steps.check_files.outputs.docker_changed }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Check if Docker-related files changed
        id: check_files
        run: |
          # Only run git diff if not manually triggered
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "Manual trigger detected"
            echo "docker_changed=${{ github.event.inputs.build_docker }}" >> $GITHUB_OUTPUT
          else
            # For push/pull_request events
            if [[ "${{ github.event_name }}" == "pull_request" ]]; then
              CHANGED_FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.sha }})
            else
              # Push event
              git fetch origin ${{ github.event.before }}
              CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
            fi

            if echo "$CHANGED_FILES" | grep -q -E "Dockerfile|.env|docker-compose.yml|.github/workflows"; then
              echo "Docker-related files changed"
              echo "docker_changed=true" >> $GITHUB_OUTPUT
            else
              echo "No Docker-related files changed"
              echo "docker_changed=false" >> $GITHUB_OUTPUT
            fi
          fi

  build-docker:
    permissions:
      contents: read
      packages: write
    needs: check-docker-changes
    if: needs.check-docker-changes.outputs.docker_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        id: build_push
        env:
          ZEPHYR_IMG: ${{ env.ZEPHYR_IMG }}
        run: |
          FSW_IMG_TAG=fsw_$(echo ${GITHUB_REF#refs/heads/} | sed 's|/|_|g')
          FSW_IMG=${{ env.ZEPHYR_IMG }}:$FSW_IMG_TAG
          echo "Building and pushing $FSW_IMG"
          ./run.sh build docker --clean --local
          docker push $FSW_IMG
          echo "fsw_img_tag=$FSW_IMG_TAG" >> $GITHUB_OUTPUT

  build-fsw:
    needs: [check-docker-changes]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Docker tag
        run: |
          FSW_IMG_TAG=fsw_$(echo ${GITHUB_REF#refs/heads/} | sed 's|/|_|g')
          echo "FSW_IMG_TAG=$FSW_IMG_TAG" >> $GITHUB_ENV
          echo "FSW_IMG=${{ env.ZEPHYR_IMG }}:$FSW_IMG_TAG" >> $GITHUB_ENV

      - name: Wait for Docker build if needed
        if: needs.check-docker-changes.outputs.docker_changed == 'true'
        run: |
          echo "Waiting for the Docker build to complete..."
          # Add a short delay to allow the registry to update
          sleep 30

      - name: Pull Docker image
        run: docker pull ${{ env.FSW_IMG }}

      - name: Build and run FSW
        run: |
          echo "Using image ${{ env.FSW_IMG }}"
          ./run.sh build --clean

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            ./BaseDeployment/build/
